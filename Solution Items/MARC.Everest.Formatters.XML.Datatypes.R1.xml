<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MARC.Everest.Formatters.XML.Datatypes.R1</name>
    </assembly>
    <members>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CRFormatter">
            <summary>
            Concept Role formatter for DT R1
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IDatatypeFormatter">
            <summary>
            Summary of DatatypeFormatter
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IDatatypeFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> to stream <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IDatatypeFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse from</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IDatatypeFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IDatatypeFormatter.HandlesType">
            <summary>
            The type this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IDatatypeFormatter.Host">
            <summary>
            Get or set a host context
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IDatatypeFormatter.GenericArguments">
            <summary>
            The generic arguments to the type being formatted
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CRFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CRFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse the object from</param>
            <returns>The constructed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CRFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CRFormatter.HandlesType">
            <summary>
            Gets the type that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CRFormatter.Host">
            <summary>
            Get or set the host of this formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CRFormatter.GenericArguments">
            <summary>
            Gets or sets the generic type arguments of this formatter
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COLLFormatter">
            <summary>
            ITS1 formatter for the COLL datatype
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COLLFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The stream</param>
            <param name="o">The object</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COLLFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COLLFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COLLFormatter.HandlesType">
            <summary>
            Get the name of the type this handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COLLFormatter.Host">
            <summary>
            Get or set the hosting formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COLLFormatter.GenericArguments">
            <summary>
            Generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COFormatter">
            <summary>
            Formatter for the CO Datatype
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph function
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse function
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COFormatter.HandlesType">
            <summary>
            Gets the types this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COFormatter.Host">
            <summary>
            Gets or sets the host of this formatlet
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.COFormatter.GenericArguments">
            <summary>
            Gets or sets the generic arguments to this type
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADXPFormatter">
            <summary>
            Responsible for formatting ADXP members "to the wire"
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADXPFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Grap the object to a stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADXPFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an ADXP from stream <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADXPFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADXPFormatter.Host">
            <summary>
            Host context
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADXPFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments to this type (if applicable)
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADXPFormatter.HandlesType">
            <summary>
            Determines which types this grapher can understand
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TELFormatter">
            <summary>
            Data types R1 formatter for TEL
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TELFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph the object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The XmlWriter to graph object to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TELFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse the object from stream <paramref name="s"/>
            </summary>
            <param name="s">The XmlReader to parse from</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TELFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TELFormatter.Host">
            <summary>
            Host context
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TELFormatter.HandlesType">
            <summary>
            Gets the name of the structure this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TELFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments to this type (if applicable)
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXCMFormatter">
            <summary>
            Formatter for the SXCM type
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXCMFormatter.Parse``1(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an SXCM
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXCMFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph the SXCM to the console
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXCMFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an SXCM from the wire
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXCMFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXCMFormatter.Host">
            <summary>
            Host of this formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXCMFormatter.HandlesType">
            <summary>
            Handles SXCM
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXCMFormatter.GenericArguments">
            <summary>
            Gets or sets generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.REALFormatter">
            <summary>
            Data type R1 formatter for the REAL data type
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.REALFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph <paramref name="o"/> onto <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.REALFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse from</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.REALFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.REALFormatter.HandlesType">
            <summary>
            Get the data type that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.REALFormatter.Host">
            <summary>
            Get or set the host of this formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.REALFormatter.GenericArguments">
            <summary>
            The generic type arguments to the formatter
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TSFormatter">
            <summary>
            TimeStamp formatter
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TSFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph the object <paramref name="o"/> onto <paramref name="s"/>
            </summary>
            <param name="s">The xmlwriter to write to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TSFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The XmlReader to parse from</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TSFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TSFormatter.Host">
            <summary>
            Host context
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TSFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments to this type (if applicable)
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TSFormatter.HandlesType">
            <summary>
            Gets the type that this datatype formatter handles
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.LISTFormatter">
            <summary>
            ITS1 formatter for the LIST datatype
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.LISTFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The stream</param>
            <param name="o">The object</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.LISTFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.LISTFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.LISTFormatter.HandlesType">
            <summary>
            Get the name of the type this handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.LISTFormatter.Host">
            <summary>
            Get or set the hosting formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.LISTFormatter.GenericArguments">
            <summary>
            Generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSIFormatter">
            <summary>
            A qset formatter must emulate the old SXPR functionality
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSIFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph to the stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSIFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse from the stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSIFormatter.GetSupportedProperties">
            <summary>
            Gets supported properties from the QSET type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSIFormatter.HandlesType">
            <summary>
            Gets the type that this handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSIFormatter.Host">
            <summary>
            Gets the host of this type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSIFormatter.GenericArguments">
            <summary>
            Gets the generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.HISTFormatter">
            <summary>
            HIST formatter
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SETFormatter">
            <summary>
            Data types R1 formatter for SET
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SETFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The XmlWriter to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SETFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to read from</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SETFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SETFormatter.HandlesType">
            <summary>
            Get the type that this formatter supports
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SETFormatter.Host">
            <summary>
            Reference to the hosting formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SETFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments to this type (if applicable)
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSUFormatter">
            <summary>
            A qset formatter must emulate the old SXPR functionality
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSUFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph to the stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSUFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse from the stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSUFormatter.GetSupportedProperties">
            <summary>
            Gets supported properties from the QSET type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSUFormatter.HandlesType">
            <summary>
            Gets the type that this handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSUFormatter.Host">
            <summary>
            Gets the host of this type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSUFormatter.GenericArguments">
            <summary>
            Gets the generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ONFormatter">
            <summary>
            Formatter for the ON Type
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ONFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph this object to the specified stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ONFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse the object from the specified stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ONFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ONFormatter.HandlesType">
            <summary>
            Gets the type that this formatter can handle
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ONFormatter.Host">
            <summary>
            Gets or sets the host
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ONFormatter.GenericArguments">
            <summary>
            Gets or sets the generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADFormatter">
            <summary>
            
            </summary>
        </member>
        <member name="F:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADFormatter.mapping">
            <summary>
            Mapping to/from the Data Types R1 "each element has its own name"
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADFormatter.Host">
            <summary>
            Host context
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADFormatter.HandlesType">
            <summary>
            What types does this formatter handle
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ADFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments to this type (if applicable)
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterCompatibilityMode">
            <summary>
            Identifies the compatibility mode for the data type formatter
            </summary>
        </member>
        <member name="F:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterCompatibilityMode.Universal">
            <summary>
            The datatype formatter should use the Universal definition of datatypes when formatting
            </summary>
        </member>
        <member name="F:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterCompatibilityMode.Canadian">
            <summary>
            The datatype formatter should use the Canadian extensions to data types R1 when formatting
            </summary>
        </member>
        <member name="F:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterCompatibilityMode.ClinicalDocumentArchitecture">
            <summary>
            The data type formatter should be set to emulate the data types that are commonly used as part of 
            CDAr2 
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult">
            <summary>
            Formatter graph result for datatypes structures
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult.AddResultDetail(MARC.Everest.Connectors.IResultDetail)">
            <summary>
            Add a result detail item
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult.RemoveResultDetail(System.Predicate{MARC.Everest.Connectors.IResultDetail})">
            <summary>
            Remove a result detail
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult.#ctor(MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterCompatibilityMode)">
            <summary>
            Datatype formatter graph result
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult.#ctor(MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterCompatibilityMode,MARC.Everest.Connectors.ResultCode,MARC.Everest.Connectors.IResultDetail[],System.Boolean)">
            <summary>
            Datatype formatter graph result
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult.AddResultDetail(System.Collections.Generic.IEnumerable{MARC.Everest.Connectors.IResultDetail})">
            <summary>
            Add result details from an array
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult.CompatibilityMode">
            <summary>
            Gets or sets the operation mode
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult.ValidateConformance">
            <summary>
            Gets or sets whether the formatter validates
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult.Details">
            <summary>
            Gets the details of the parse
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult.Code">
            <summary>
            Gets the result code of the formatting result
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult">
            <summary>
            Formatter parse result for datatypes structures
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult.AddResultDetail(MARC.Everest.Connectors.IResultDetail)">
            <summary>
            Add a result detail item
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult.RemoveResultDetail(System.Predicate{MARC.Everest.Connectors.IResultDetail})">
            <summary>
            Remove a result detail
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult.AddResultDetail(System.Collections.Generic.IEnumerable{MARC.Everest.Connectors.IResultDetail})">
            <summary>
            Add result details from an array
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult.#ctor(MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterCompatibilityMode)">
            <summary>
            Datatype formatter parse result
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult.#ctor(MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterCompatibilityMode,MARC.Everest.Connectors.ResultCode,MARC.Everest.Connectors.IResultDetail[],System.Boolean)">
            <summary>
            Datatype formatter parse result
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult.CompatibilityMode">
            <summary>
            Gets or sets the operation mode
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult.ValidateConformance">
            <summary>
            Gets or sets whether this formatter will validate conformance
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult.Details">
            <summary>
            Gets the details of the parse
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult.Code">
            <summary>
            Gets the result code of the formatting result
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQFormatter">
            <summary>
            Formatter for PQ data type
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o"></param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQFormatter.HandlesType">
            <summary>
            Handles type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQFormatter.Host">
            <summary>
            Get or set the host
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQFormatter.GenericArguments">
            <summary>
            Get or set generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PNFormatter">
            <summary>
            XML ITS 1.0 PN Formatter
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PNFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse from</param>
            <param name="o">The object to parse</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PNFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an instance from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse from</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PNFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PNFormatter.HandlesType">
            <summary>
            Get the type that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PNFormatter.Host">
            <summary>
            Get or set the host value
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PNFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IIFormatter">
            <summary>
            Formats an II instance on the wire according to various data-types R1
            and derivativ
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IIFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph this datatype to the stream
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IIFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse this object
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IIFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IIFormatter.Host">
            <summary>
            Host context
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IIFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments to this type (if applicable)
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IIFormatter.HandlesType">
            <summary>
            Returns the datatype this formatter handles
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXPRFormatter">
            <summary>
            SXPR Formatter helper
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXPRFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXPRFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXPRFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXPRFormatter.Details">
            <summary>
            Details for the formatting
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXPRFormatter.HandlesType">
            <summary>
            Gets the type that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXPRFormatter.Host">
            <summary>
            Gets or sets the host
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SXPRFormatter.GenericArguments">
            <summary>
            Gets or sets the generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PDVFormatter">
            <summary>
            Primitive Data Value Container formatter. This formatter is used by a multitude of other formatters
            to parse and graph PDV data
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PDVFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph a PDV object onto the stream
            </summary>
            <param name="xw">The writer to graph to</param>
            <param name="o">The object to parse</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PDVFormatter.Parse``1(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an instance of T from the XmlReader
            </summary>
            <typeparam name="T">The type of object to read</typeparam>
            <param name="xr">The Xml Reader to read from</param>
            <returns>The parsed instance</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PDVFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CVFormatter">
            <summary>
            Datatypes R1 formatter for the CV data type
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CVFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The XmlWriter to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CVFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse object from <paramref name="s"/>
            </summary>
            <param name="s">The XmlReader to graph from</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CVFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CVFormatter.Host">
            <summary>
            Host context
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CVFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments to this type (if applicable)
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CVFormatter.HandlesType">
            <summary>
            Get the type that this formatter handles
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CSFormatter">
            <summary>
            Formatter for the CS datatype
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CSFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph the object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CSFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse from</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CSFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CSFormatter.Host">
            <summary>
            Host context
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CSFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments to this type (if applicable)
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CSFormatter.HandlesType">
            <summary>
            Gets the types that this formatter handles
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CDFormatter">
            <summary>
            Formatter for the CD Datatype
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CDFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CDFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to read from</param>
            <remarks>Because the way the stream operates, we need to duplicate code from the CV formatter</remarks>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CDFormatter.Parse``1(System.Xml.XmlReader,MARC.Everest.Connectors.IXmlStructureFormatter,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse a <typeparamref name="T"/> object from the stream
            </summary>
            <typeparam name="T">The type of object to parse</typeparam>
            <param name="s">The stream to parse from</param>
            <param name="host"></param>
            <param name="details">Details of the parse operation.</param>
            <returns></returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CDFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CDFormatter.HandlesType">
            <summary>
            Get the type that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CDFormatter.Host">
            <summary>
            Host formatting
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CDFormatter.GenericArguments">
            <summary>
            Generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BAGFormatter">
            <summary>
            Represents a formatter for the BAG class
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BAGFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The stream</param>
            <param name="o">The object</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BAGFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BAGFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BAGFormatter.HandlesType">
            <summary>
            Get the name of the type this handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BAGFormatter.Host">
            <summary>
            Get or set the hosting formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BAGFormatter.GenericArguments">
            <summary>
            Generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.STFormatter">
            <summary>
            string Formatter
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.STFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph the object
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.STFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse the object
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.STFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.STFormatter.HandlesType">
            <summary>
            What types does this formatter handle
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.STFormatter.Host">
            <summary>
            Get or set the host
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.STFormatter.GenericArguments">
            <summary>
            Generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IVLFormatter">
            <summary>
            IVL Formatter for DT R1
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IVLFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
            JF: Fixed Inclusive rendering issue with IVL
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IVLFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse from</param>
            <returns>The parsed object</returns>
            TODO: Parse low/high closed attributes
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IVLFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IVLFormatter.HandlesType">
            <summary>
            Gets the type that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IVLFormatter.Host">
            <summary>
            Get or set the host of this formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.IVLFormatter.GenericArguments">
            <summary>
            Generic arguments for the formatter
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EDFormatter">
            <summary>
            Data type R1 formatter for ED
            </summary> 
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EDFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph the object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The XmlWriter to write the object to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EDFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse the object
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EDFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EDFormatter.Host">
            <summary>
            Host context
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EDFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments to this type (if applicable)
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EDFormatter.HandlesType">
            <summary>
            Get the type that this formatter handles
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.URGFormatter">
            <summary>
            Formatter for the DT R1 URG data type
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.URGFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.URGFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse from</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.URGFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.URGFormatter.HandlesType">
            <summary>
            Returns the type that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.URGFormatter.Host">
            <summary>
            Get or set the host of this formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.URGFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TNFormatter">
            <summary>
            Trivial Name Formatter.
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TNFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graphs the object <paramref name="o"/> onto the stream.
            </summary>
            <param name="s">The XmlWriter stream to write to.</param>
            <param name="o">The object to graph.</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TNFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse the TN from the XmlReader <paramref name="s"/>.
            </summary>
            <param name="s">XmlReader stream to parse from.</param>
            <returns>Parsed TN.</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TNFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TNFormatter.HandlesType">
            <summary>
            Gets the type that this formater handles.
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TNFormatter.Host">
            <summary>
            Get or set the host formatter.
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.TNFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments to this type (if applicable).
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.MOFormatter">
            <summary>
            Datatype formatter for the MO data type
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.MOFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.MOFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from stream <paramref name="s"/>
            </summary>
            <param name="s">The stream to read from</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.MOFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.MOFormatter.HandlesType">
            <summary>
            Get the type this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.MOFormatter.Host">
            <summary>
            Get or set the host of this formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.MOFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ANYFormatter">
            <summary>
            Summary of ANY
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ANYFormatter.#ctor">
            <summary>
            Create a new instance of ANYFormatter
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ANYFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph the object
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ANYFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse the object
            </summary>
            <remarks>ANY can only be used when there is a nullFlavor associated with it</remarks>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ANYFormatter.Parse``1(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse ANY object using a concrete implementation of ANY
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ANYFormatter.Validate(MARC.Everest.DataTypes.ANY,System.String,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Validate the object
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ANYFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ANYFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments to this type (if applicable)
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ANYFormatter.HandlesType">
            <summary>
            Handles the type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ANYFormatter.Host">
            <summary>
            Host context
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSSFormatter">
            <summary>
            A qset formatter must emulate the old SXPR functionality
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSSFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph to the stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSSFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse from the stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSSFormatter.GetSupportedProperties">
            <summary>
            Gets supported properties from the QSET type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSSFormatter.HandlesType">
            <summary>
            Gets the type that this handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSSFormatter.Host">
            <summary>
            Gets the host of this type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSSFormatter.GenericArguments">
            <summary>
            Gets the generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSPFormatter">
            <summary>
            A qset formatter must emulate the old SXPR functionality
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSPFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph to the stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSPFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse from the stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSPFormatter.GetSupportedProperties">
            <summary>
            Gets supported properties from the QSET type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSPFormatter.HandlesType">
            <summary>
            Gets the type that this handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSPFormatter.Host">
            <summary>
            Gets the host of this type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSPFormatter.GenericArguments">
            <summary>
            Gets the generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSDFormatter">
            <summary>
            A qset formatter must emulate the old SXPR functionality
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSDFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph to the stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSDFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse from the stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSDFormatter.GetSupportedProperties">
            <summary>
            Gets supported properties from the QSET type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSDFormatter.HandlesType">
            <summary>
            Gets the type that this handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSDFormatter.Host">
            <summary>
            Gets the host of this type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSDFormatter.GenericArguments">
            <summary>
            Gets the generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PIVLFormatter">
            <summary>
            Summary Documentation
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PIVLFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph <paramref name="o"/> onto <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PIVLFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an instance from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse from</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PIVLFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PIVLFormatter.HandlesType">
            <summary>
            Gets the type that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PIVLFormatter.Host">
            <summary>
            Gets or sets the host of the formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PIVLFormatter.GenericArguments">
            <summary>
            Gets or sets the generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.NPPDFormatter">
            <summary>
            ITS1 formatter for the NPPD datatype
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.NPPDFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The stream</param>
            <param name="o">The object</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.NPPDFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.NPPDFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.NPPDFormatter.HandlesType">
            <summary>
            Get the name of the type this handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.NPPDFormatter.Host">
            <summary>
            Get or set the hosting formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.NPPDFormatter.GenericArguments">
            <summary>
            Generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSETFormatter">
            <summary>
            A qset formatter must emulate the old SXPR functionality
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSETFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph to the stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSETFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse from the stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSETFormatter.GetSupportedProperties">
            <summary>
            Gets supported properties from the QSET type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSETFormatter.HandlesType">
            <summary>
            Gets the type that this handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSETFormatter.Host">
            <summary>
            Gets the host of this type
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.QSETFormatter.GenericArguments">
            <summary>
            Gets the generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.UVPFormatter">
            <summary>
            UVP Formatter
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.UVPFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph <paramref name="o"/> onto <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.UVPFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The reader to parse from</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.UVPFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.UVPFormatter.HandlesType">
            <summary>
            Get the type that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.UVPFormatter.Host">
            <summary>
            Get or set the host
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.UVPFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQRFormatter">
            <summary>
            Data Type R1 Formatter 
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQRFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQRFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse from</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQRFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQRFormatter.HandlesType">
            <summary>
            Gets the type of structure that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQRFormatter.Host">
            <summary>
            Gets or sets the host of this formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.PQRFormatter.GenericArguments">
            <summary>
            Gets or sets the generic arguments supplied to this formatter
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.GTSFormatter">
            <summary>
            Formatter for the GTS datatype
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.GTSFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph the object <paramref name="o"/> to <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.GTSFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse the object from <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.GTSFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.GTSFormatter.HandlesType">
            <summary>
            Get the type that this handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.GTSFormatter.Host">
            <summary>
            Formatting host
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.GTSFormatter.GenericArguments">
            <summary>
            Generic arguments for the item
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CEFormatter">
            <summary>
            Data types R1 formatter for the CE data type
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CEFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto stream <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CEFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from stream <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse from</param>
            <remarks>This need to be implemented in this manner (duplicating code) because of the way that 
            the XMLReader object functions</remarks>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CEFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CEFormatter.HandlesType">
            <summary>
            Get the type that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CEFormatter.Host">
            <summary>
            Get or set the formatter host that owns this object
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.CEFormatter.GenericArguments">
            <summary>
            Get or set the generic arguments to the original type
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SCFormatter">
            <summary>
            SC Formatter.
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SCFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graphs the object <paramref name="o"/> onto the stream
            <paramref name="s"/>.
            </summary>
            <param name="s">The XmlWriter stream to graph to.</param>
            <param name="o">The object to graph.</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SCFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse from</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SCFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SCFormatter.HandlesType">
            <summary>
            Returns the type that this formater handles.
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SCFormatter.Host">
            <summary>
            Gets or sets the host.
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.SCFormatter.GenericArguments">
            <summary>
            Generic arguments.
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.INTFormatter">
            <summary>
            Data Type R1 formatter for the INT data type
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.INTFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph <paramref name="o"/> onto <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.INTFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse from</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.INTFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.INTFormatter.HandlesType">
            <summary>
            Get the data type that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.INTFormatter.Host">
            <summary>
            Get or set the host of the formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.INTFormatter.GenericArguments">
            <summary>
            The generic type arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.UnsupportedDatatypeR1PropertyResultDetail">
            <summary>
            Identifies that a property populated within the datatype wasn't rendered
            to the output stream by the R1 formatter
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.UnsupportedDatatypeR1PropertyResultDetail.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.UnsupportedDatatypeR1PropertyResultDetail.#ctor(MARC.Everest.Connectors.ResultDetailType,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the unsupported data type result detail
            </summary>
            <param name="type">The type of result detail</param>
            <param name="propertyName">The name of the property that is not supported</param>
            <param name="datatypeName">The name of the datatype that is not supported</param>
            <param name="location">The location within the instance that that is not supported</param>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.RTOFormatter">
            <summary>
            Data types R1 formatter for RTO type
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.RTOFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.RTOFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse from</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.RTOFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.RTOFormatter.HandlesType">
            <summary>
            Get the type that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.RTOFormatter.Host">
            <summary>
            Get or set the host of this formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.RTOFormatter.GenericArguments">
            <summary>
            Generic arguments
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENFormatter">
            <summary>
            Entity Name Formatter
            </summary>
        </member>
        <member name="F:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENFormatter.mapping">
            <summary>
            Mapping to/from the Data Types R1 "each element has its own name"
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph <paramref name="o"/> onto <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse and object from <paramref name="s"/>
            </summary>
            <param name="s">The stream to parse</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENFormatter.Parse``1(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Generic parse method
            </summary>
            <typeparam name="T">The type of object to parse</typeparam>
            <param name="s">The stream to parse from</param>
            <returns>The parsed object</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENFormatter.HandlesType">
            <summary>
            Get the type that this formatter handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENFormatter.Host">
            <summary>
            Get or set the host of this formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENFormatter.GenericArguments">
            <summary>
            Get or set the generic type arguments for this formatter
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatter">
            <summary>
            A linked class to <see cref="T:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter"/> that
            exists to retain backwards compatibility with pre 1.0 versions of Everest
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter">
            <summary>
            Represents a formatter that can be used as a graph aide for the purpose of
            formatting data types instances to the XML Datatypes R1 specification.
            </summary>
        </member>
        <member name="F:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.NS_XSI">
            <summary>
            XSI
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.#ctor">
            <summary>
            Scan this assembly for datatype formatters
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.#ctor(MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterCompatibilityMode)">
            <summary>
            Creates a new instance of the data type formatter with the specified <paramref name="compatibilityMode"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.GetFormatter(System.Type)">
            <summary>
            Get formatter
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.Clone">
            <summary>
            clone an instnace of this object
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.Graph(System.Xml.XmlWriter,MARC.Everest.Interfaces.IGraphable)">
            <summary>
            Graphs object <paramref name="o"/> onto <paramref name="s"/>
            </summary>
            <param name="s">The stream to graph to</param>
            <param name="o">The object to graph</param>
            <returns>A formatter graphing result</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.Parse(System.Xml.XmlReader)">
            <summary>
            Parse an object from <paramref name="r"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.Parse(System.Xml.XmlReader,System.Type)">
            <summary>
            Parse an object from <paramref name="r"/> using the type hint <paramref name="t"/>
            </summary>
            <param name="r">The reader to read from</param>
            <param name="t">The type hint for the formatter</param>
            <returns>A structured result</returns>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.Graph(System.IO.Stream,MARC.Everest.Interfaces.IGraphable)">
            <summary>
            Graph <paramref name="o"/> onto <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.Parse(System.IO.Stream)">
            <summary>
            Parse a structure from <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.GetSupportedProperties(System.Type)">
            <summary>
            Get the supported properties for the type
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.CompatibilityMode">
            <summary>
            Gets or sets a property specifying the compatibility of the data types formatter
            </summary>
            <remarks>
            Specifies the compatibility of the data types formatter as supporting the Canadian
            extensions to data types R1 or the 
            </remarks>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.GraphHint">
            <summary>
            Get or set graph hints for deserialization
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.HandleStructure">
            <summary>
            Get the datatypes that this formatter can handle
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.Host">
            <summary>
            Host of this structure formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.GraphAides">
            <summary>
            Gets or sets the aides on this formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatter.ValidateConformance">
            <summary>
            Validate conformance
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.CanadianDatatypeFormatter">
            <summary>
            Represents a data type formatter that already has the compatibility mode set to Canadian
            </summary>
            <remarks>
            Setting compatibility to Canadian will have several effects on the formatting of data types. This includes the 
            emitting of a specializationType attribute (in place of Flavor)
            </remarks>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.CanadianDatatypeFormatter.#ctor">
            <summary>
            Creates a new instance of the Canadian datatype formatter
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.ClinicalDocumentDatatypeFormatter">
            <summary>
            Represents a data type formatter that is set to emulate Data Types used with CDAr2
            </summary>
            <remarks>
            Using this formatter will set the compatibility of the formatter to ClinicalDocumentArchitecture which
            means that some features of data types will not be represented on the wire.
            </remarks>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.ClinicalDocumentDatatypeFormatter.#ctor">
            <summary>
            Creates a new instance of the CDA datatype formatter
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENXPFormatter">
            <summary>
            Formatter for ENXP
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENXPFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Grap the object to a stream
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENXPFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an ENXP from stream <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENXPFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENXPFormatter.Host">
            <summary>
            Host context
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENXPFormatter.GenericArguments">
            <summary>
            Gets or sets the generic arguments to the formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.ENXPFormatter.HandlesType">
            <summary>
            Determines which types this grapher can understand
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EIVLFormatter">
            <summary>
            EIVL formatter
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EIVLFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph object <paramref name="o"/> onto <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EIVLFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse an object from <paramref name="s"/>
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EIVLFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EIVLFormatter.HandlesType">
            <summary>
            Gets the type that this instance handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EIVLFormatter.Host">
            <summary>
            Gets or sets the host instance for this formatter
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.EIVLFormatter.GenericArguments">
            <summary>
            Gets or sets the generic arguments for the formatter
            </summary>
        </member>
        <member name="T:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BLFormatter">
            <summary>
            Datatype R1 formatter for the BL datatype
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BLFormatter.Graph(System.Xml.XmlWriter,System.Object,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterGraphResult)">
            <summary>
            Graph the object
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BLFormatter.Parse(System.Xml.XmlReader,MARC.Everest.Formatters.XML.Datatypes.R1.DatatypeFormatterParseResult)">
            <summary>
            Parse the object
            </summary>
        </member>
        <member name="M:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BLFormatter.GetSupportedProperties">
            <summary>
            Get the supported properties for the rendering
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BLFormatter.HandlesType">
            <summary>
            Get the type that this handles
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BLFormatter.Host">
            <summary>
            Host 
            </summary>
        </member>
        <member name="P:MARC.Everest.Formatters.XML.Datatypes.R1.Formatters.BLFormatter.GenericArguments">
            <summary>
            Get generic arguments
            </summary>
        </member>
    </members>
</doc>
